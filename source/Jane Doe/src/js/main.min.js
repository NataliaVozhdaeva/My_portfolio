/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (() => {

var userName = document.getElementById('userName');
var userGender = document.getElementById("userGender");
var userCountry = document.getElementById("userCountry");
var userCity = document.getElementById("userCity");
var userBirthday = document.getElementById("userBirthday");
var checkbox = document.getElementById("checkbox");
var submitBtn = document.getElementById("submitBtn");
var form = document.querySelector('.form');
var element;

function initiate() {
  userGender.addEventListener("input", validation, false);
  validation();
}

function validation() {
  if (userGender.value == 'Male' || userGender.value == 'Female' || userGender.value == 'Other') {
    userGender.setCustomValidity("");
    var elemsDisabled = document.querySelectorAll('.disabled');

    for (var i = 0; i < elemsDisabled.length; i++) {
      elemsDisabled[i].classList.remove('disabled');
    }

    submitBtn.setAttribute('disabled', 'disabled');
  } else {
    userGender.setCustomValidity("Пожалуйста, выберите что-то из списка: Male, Female или Other");
  }
}

;
document.getElementById('userDocument').addEventListener('change', function () {
  if (this.value) {
    console.log("Оп!");
    element = document.createElement('div');
    element.className = 'form__field getDocument';
    element.style.gridArea = 'getDocument';
    form.append(element);
    var image = document.createElement('img');
    element.append(image);
    image.setAttribute('src', 'pic/preview.png');
    var span1 = document.createElement('span');
    span1.classList.add('fileName');
    var fileName = document.getElementById('userDocument').name;
    var fileSize = document.getElementById('userDocument').size;
    span1.innerText = fileName;
    element.append(span1);
    var span2 = document.createElement('span');
    span2.classList.add('fileSize');
    span2.innerText = fileSize + 'mb';
    element.append(span2);
    var trash = document.createElement('i');
    trash.className = 'fa fa-trash';
    element.append(trash);

    if (window.screen.width <= 375) {
      submitBtn.removeAttribute('disabled');
      submitBtn.classList.add('btn_active');
    }
  } else {
    alert("Файл не выбран");
  }
});

checkbox.onclick = function () {
  if (checkbox.checked) {
    submitBtn.removeAttribute('disabled');
    submitBtn.classList.add('btn_active');
  } else {
    alert("поставьте галочку");
  }
};

window.addEventListener("load", initiate, false);

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _js_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/main */ "./src/js/main.js");
/* harmony import */ var _js_main__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_js_main__WEBPACK_IMPORTED_MODULE_0__);

})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,